{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Klinus","text":"<p>O Klinus \u00e9 um sistema de automa\u00e7\u00e3o desenvolvido para otimizar o uso de ar-condicionado em institui\u00e7\u00f5es p\u00fablicas, visando a redu\u00e7\u00e3o do consumo energ\u00e9tico e promovendo a sustentabilidade ambiental. Utilizando sensores de presen\u00e7a e comunica\u00e7\u00e3o sem fio, o sistema ajusta automaticamente o funcionamento dos aparelhos de ar-condicionado com base na ocupa\u00e7\u00e3o dos ambientes.</p>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":""},{"location":"#hardware","title":"Hardware","text":"<ul> <li>Microcontroladores ESP32 C3 MINI: Utilizados para controlar os dispositivos de r\u00e1dio e head, permitindo a comunica\u00e7\u00e3o via Wi-Fi e o envio de sinais infravermelhos.</li> <li>Sensor LD2410: Sensor de presen\u00e7a utilizado para detectar a ocupa\u00e7\u00e3o dos ambientes.</li> <li>Transmissor Infravermelho: Componente respons\u00e1vel por enviar comandos ao ar-condicionado.</li> </ul>"},{"location":"#software","title":"Software","text":"<ul> <li>Firmware em C/C++: Desenvolvido para os microcontroladores ESP32, gerenciando a l\u00f3gica de detec\u00e7\u00e3o de presen\u00e7a e controle do ar-condicionado.</li> <li>Servidor Django (Backend): Respons\u00e1vel por gerenciar a comunica\u00e7\u00e3o entre os dispositivos e armazenar dados de uso e desempenho.</li> </ul>"},{"location":"#contribuicao","title":"Contribui\u00e7\u00e3o","text":"<ul> <li>Fork \u2192 feature branch \u2192 pull request com descri\u00e7\u00e3o e testes.</li> <li>Siga padr\u00f5es de formata\u00e7\u00e3o (flake8/black) e escreva testes b\u00e1sicos para altera\u00e7\u00f5es de backend.</li> </ul>"},{"location":"#proximos-passos","title":"Pr\u00f3ximos passos","text":"<ul> <li>Servidor \u2014 instru\u00e7\u00f5es para instalar o servidor.</li> <li>Firmware \u2014 sobre os dispositivos e firmware.</li> </ul>"},{"location":"#licenca","title":"Licen\u00e7a","text":"<p>Este projeto est\u00e1 licenciado sob a Licen\u00e7a MIT. Veja o arquivo LICENSE para mais detalhes.</p>"},{"location":"firmware/","title":"Firmware","text":"<p>Ol\u00e1! Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre os firmwares utilizados neste projeto.</p>"},{"location":"firmware/dispositivos/","title":"Dispositivos","text":""},{"location":"firmware/dispositivos/#divisao-de-dispositivos","title":"Divis\u00e3o de Dispositivos","text":"<p>O projeto est\u00e1 dividido em dois dispositivos principais:</p> <ol> <li> <p>Dispositivo R\u00e1dio: respons\u00e1vel por manter comunica\u00e7\u00e3o com o servidor externo e detectar a presen\u00e7a de pessoas na sala por meio de sensores de movimento. Tamb\u00e9m se comunica com o Dispositivo Head para solicitar que comandos sejam enviados ao ar-condicionado.</p> <p>Localiza\u00e7\u00e3o geogr\u00e1fica (r\u00e1dio): este dispositivo deve estar em um local com boa visibilidade da sala (recomenda-se o centro) para garantir a detec\u00e7\u00e3o de movimento, al\u00e9m de boa recep\u00e7\u00e3o de sinal Wi-Fi para garantir a comunica\u00e7\u00e3o com o servidor externo.</p> <p>Componentes (r\u00e1dio): - ESP32 C3 MINI - Sensor LD2410 (Detector de presen\u00e7a)</p> </li> <li> <p>Dispositivo Head: respons\u00e1vel por receber os pedidos do Dispositivo R\u00e1dio e transmiti-los via sinais infravermelhos ao ar-condicionado.</p> <p>Localiza\u00e7\u00e3o geogr\u00e1fica (Head): este dispositivo deve ficar o mais pr\u00f3ximo poss\u00edvel do ar-condicionado, em linha de vis\u00e3o direta, para garantir que os sinais infravermelhos sejam recebidos corretamente.</p> <p>Componentes (Head): - ESP32 C3 MINI - IR Transmitter (Transmissor Infravermelho)</p> </li> </ol>"},{"location":"server/instalacao/","title":"Instala\u00e7\u00e3o","text":""},{"location":"server/instalacao/#instalando-localmente","title":"Instalando localmente","text":"<ol> <li>Clone o reposit\u00f3rio:     <code>git clone https://github.com/diaslui/klinus</code></li> <li>Crie e ative um ambiente virtual:     <code>python -m venv .venv     source .venv/bin/activate  # Linux / macOS     .venv\\Scripts\\activate     # Windows</code></li> <li>Entre na pasta do servidor:     <code>cd server</code></li> <li>Instale depend\u00eancias:     <code>pip install -r requirements.txt</code></li> <li> <p>Configure vari\u00e1veis de ambiente (exemplo .env):</p> <ul> <li>SECRET_KEY</li> <li>DATABASE_URL (ex: sqlite:///db.sqlite3 ou postgres://...)</li> <li>ALLOWED_HOSTS</li> </ul> </li> <li> <p>Execute migra\u00e7\u00f5es e crie um superusu\u00e1rio:     <code>python manage.py migrate     python manage.py createsuperuser</code></p> </li> </ol>"},{"location":"server/instalacao/#rodando","title":"Rodando","text":"<ul> <li>Em desenvolvimento:   <code>python manage.py runserver</code></li> <li>Para produ\u00e7\u00e3o, use Gunicorn/uvicorn e configure reverse proxy (NGINX).</li> </ul>"}]}